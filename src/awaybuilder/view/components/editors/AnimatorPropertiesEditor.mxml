<?xml version="1.0" encoding="utf-8"?>
<editors:EditorBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:editors="awaybuilder.view.components.editors.*" xmlns:controls="awaybuilder.view.components.controls.*" currentState="{_asset.type}">
	<fx:Declarations>
	</fx:Declarations>
	<editors:states>
		<s:State name="SkeletonAnimator"/>
		<s:State name="VertexAnimator"/>
	</editors:states>
	<fx:Script><![CDATA[
		import awaybuilder.model.vo.scene.AnimationNodeVO;
		import awaybuilder.model.vo.scene.AnimatorVO;
		import awaybuilder.view.components.editors.events.PropertyEditorEvent;
		
		import mx.collections.ArrayCollection;
		
		import spark.events.IndexChangeEvent;
		
		[Bindable]
		public var vertexAnimationSets:ArrayCollection;
		
		[Bindable]
		public var skeletonsAnimationSets:ArrayCollection;
		
		[Bindable]
		private var _asset:AnimatorVO;
		
		override protected function validate(asset:Object):void
		{
			if( !(asset is AnimatorVO) ) return;
			_asset = AnimatorVO(asset).clone();
		}
		
		private function stepper_changeHandler( event:Event ):void
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.ANIMATOR_STEPPER_CHANGE, _asset));
		}
		
		protected function animationSets_clickHandler(event:MouseEvent):void
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.SHOW_CHILD_PROPERTIES, _asset.animationSet));
		}
		
		protected function skeletons_clickHandler(event:MouseEvent):void
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.SHOW_CHILD_PROPERTIES, _asset.skeleton));
		}
		
		protected function skeletonsList_changeHandler(event:IndexChangeEvent):void
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.ANIMATOR_CHANGE, _asset));
		}
		
		protected function animatorsList_changeHandler(event:IndexChangeEvent):void
		{
			var animation:AnimationNodeVO = animatorsList.selectedItem as AnimationNodeVO;
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.ANIMATOR_SEEK, animation ));
		}
		
	]]></fx:Script>
	
	<s:Group width="100%" top="0">
		<s:Rect left="0" right="0" top="3" bottom="3">
			<s:fill>
				<s:SolidColor color="0x111111" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<s:HGroup width="100%" verticalAlign="middle" paddingLeft="2" paddingRight="2" paddingTop="4" paddingBottom="4">
			<s:Button id="editParentObjectButton" styleName="editParentObjectButtonStyle" visible="{prevSelected.length>0}"
					  width="32" height="32" click="editParentObjectButton_clickHandler(event)"/>
			<s:Label width="100%" text="{_asset.type}" fontWeight="bold" fontSize="14"/>
		</s:HGroup>
	</s:Group>
	
	<s:Form width="100%" height="100%" skinClass="awaybuilder.view.skins.PropertyFormSkin">
		<s:FormItem label="Name" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
			<s:TextInput width="100%" text="@{_asset.name}" change="stepper_changeHandler(event)" enabled="{!_asset.isDefault}"/>
		</s:FormItem>
		<s:FormItem label="PlayBack Speed" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%">
			<controls:DragableNumericStepper stepSize="0.01" snapInterval="0.001" minimum="-1000" maximum="1000" width="42" value="@{_asset.playbackSpeed}" change="stepper_changeHandler(event)" />
		</s:FormItem>
	</s:Form>
	
	<controls:PropertiesItemContainer label="Skeleton" width="100%" paddingTop="8" paddingLeft="10" paddingRight="8" includeIn="SkeletonAnimator">
		<s:DropDownList requireSelection="true" width="100%" labelField="name"
						change="skeletonsList_changeHandler(event)"
						selectedItem="@{_asset.skeleton}" dataProvider="{skeletons}"
						/>
		<s:Button styleName="editSharedObjectButtonStyle" width="23" height="100%" click="skeletons_clickHandler(event)" />
	</controls:PropertiesItemContainer>
	<controls:PropertiesItemContainer label="Animations" width="100%" paddingTop="8" paddingLeft="10" paddingRight="8">
		<s:List id="animatorsList" dataProvider="{_asset.animationSet.animations}" 
				change="animatorsList_changeHandler(event)"
				width="100%" 
				skinClass="awaybuilder.view.skins.AnimationsListSkin"
				requireSelection="true"/>
	</controls:PropertiesItemContainer>
	
</editors:EditorBase>
