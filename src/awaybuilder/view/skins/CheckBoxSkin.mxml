<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabledStates="0.5">

	<fx:Metadata>
		[HostComponent("spark.components.CheckBox")]
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized. 
		   For button, the graphics are colorized but the label is not. */
		static private const exclusions:Array = ["labelDisplay", "check"];

	   /** 
		* @private 
		*/	 
		override public function get colorizeExclusions():Array {return exclusions;}
		
		/* Define the symbol fill items that should be colored by the "symbolColor" style. */
		static private const symbols:Array = ["checkMarkFill"];

	   /**
		* @private 
		*/
		override public function get symbolItems():Array {return symbols};
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			/** 
			 * @private 
			 */	 
			private static const focusExclusions:Array = ["labelDisplay"];

			/**
			 * @private
			 */
			override public function get focusSkinExclusions():Array { return focusExclusions;};
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="disabledStates, selectedStates" />
	</s:states>
	
	<s:Group verticalCenter="0" width="13" height="13" layoutDirection="ltr">
		<!-- drop shadow -->
		<s:Rect left="-1" top="-1" right="-1" bottom="-1">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0x000000" 
								   color.downStates="0xFFFFFF"
								   alpha="0.011"
								   alpha.downStates="0" />
					<s:GradientEntry color="0x000000" 
								   color.downStates="0xFFFFFF" 
								   alpha="0.121"
								   alpha.downStates="0.57" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>
		
		<!-- fill -->
		<s:Rect left="1" top="1" right="1" bottom="1">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xEAEAEA" 
						color.overStates="0xFFFFFF" 
						color.downStates="0xD7D7D7"/>
					<s:GradientEntry color="0xC0C0C0"
						color.overStates="0xD5D5D5"
						color.downStates="0xEAEAEA"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<!-- layer 6: highlight stroke (all states except down) -->
		<s:Rect left="1" right="1" top="1" bottom="1" excludeFrom="downStates">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0xFFFFFF" alpha.overStates="0.33" />
					<s:GradientEntry color="0xFFFFFF" alpha="0.12" alpha.overStates="0.0396" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>
		
		<!-- layer 6: highlight stroke (down state only) -->
		<s:Rect left="1" top="1" bottom="1" width="1" includeIn="downStates">
			<s:fill>
				<s:SolidColor color="0x000000" alpha="0.07" />
			</s:fill>
		</s:Rect>
		<s:Rect right="1" top="1" bottom="1" width="1" includeIn="downStates">
			<s:fill>
				<s:SolidColor color="0x000000" alpha="0.07" />
			</s:fill>
		</s:Rect>
		<s:Rect left="1" top="1" right="1" height="1" includeIn="downStates">
			<s:fill>
				<s:SolidColor color="0x000000" alpha="0.25" />
			</s:fill>
		</s:Rect>
		<s:Rect left="1" top="2" right="1" height="1" includeIn="downStates">
			<s:fill>
				<s:SolidColor color="0x000000" alpha="0.09" />
			</s:fill>
		</s:Rect>
		
		<!-- border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
		<s:Rect left="0" top="0" right="0" bottom="0">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0x000000" 
								   alpha="0.5625"
								   alpha.downStates="0.6375" />
					<s:GradientEntry color="0x000000" 
								   alpha="0.75"
								   alpha.downStates="0.85" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>
	
		<!-- checkmark -->
		<!--- The checkmark in the box for this skin. To create a custom check mark, create a custom skin class. -->
		<s:Path left="2" top="0" includeIn="selectedStates" id="check" itemCreationPolicy="immediate"
				data="M 9.2 0.1 L 4.05 6.55 L 3.15 5.0 L 0.05 5.0 L 4.6 9.7 L 12.05 0.1 L 9.2 0.1">		
			<s:fill>
				<s:SolidColor id="checkMarkFill" color="0" />
			</s:fill>
		</s:Path>
	</s:Group>

	<!-- Label -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:Label id="labelDisplay"
		textAlign="start"
		verticalAlign="middle"
		maxDisplayedLines="1"
		left="18" right="0" top="3" bottom="3" verticalCenter="2" />

</s:SparkSkin>
