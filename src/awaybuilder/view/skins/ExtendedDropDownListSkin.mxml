<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled=".5" 
			 xmlns:skins="awaybuilder.view.skins.*" xmlns:renderers="awaybuilder.view.components.editors.renderers.*" xmlns:controls="awaybuilder.view.components.controls.*">
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[
		/**
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("awaybuilder.view.components.controls.ExtendedDropDownList")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			
			/* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
			static private const contentFill:Array = ["bgFill"];
			
			/**
			 * @private
			 */
			override public function get contentItems():Array {return contentFill};
			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				if (getStyle("borderVisible") == false)
				{
					if (border)
						border.visible = false;
					if (background)
					{
						background.left = background.top = background.right = background.bottom = 0;
					}
					if (scroller)
						scroller.minViewportInset = 0;
				}
				else
				{
					if (border)
						border.visible = true;
					if (background)
					{
						background.left = background.top = background.right = background.bottom = 1;
					}
					if (scroller)
						scroller.minViewportInset = 1;
				}
				
				if (dropShadow)
					dropShadow.visible = getStyle("dropShadowVisible");
				
				openButton.setStyle("cornerRadius", getStyle("cornerRadius"));
				
				if (borderStroke)
				{
					borderStroke.color = getStyle("borderColor");
					borderStroke.alpha = getStyle("borderAlpha");
				}
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="open" />
		<s:State name="disabled" />
	</s:states>
	
	<!---
	The PopUpAnchor control that opens the drop-down list.
	
	<p>In a custom skin class that uses transitions, set the
	<code>itemDestructionPolicy</code> property to <code>never</code>.</p>
	-->
	<s:PopUpAnchor id="popUp"  displayPopUp.normal="false" displayPopUp.open="true" includeIn="open"
				   left="0" right="0" top="0" bottom="0" itemDestructionPolicy="auto"
				   popUpPosition="below" popUpWidthMatchesAnchorWidth="true">
		
		<!---
		This includes borders, background colors, scrollers, and filters.
		@copy spark.components.supportClasses.DropDownListBase#dropDown
		-->
		<s:Group id="dropDown">
			
			<!--- @private -->
			<s:RectangularDropShadow id="dropShadow" blurX="20" blurY="20" alpha="0.45" distance="7"
									 angle="90" color="#000000" left="0" top="0" right="0" bottom="0"/>
			<s:RectangularDropShadow id="drop2Shadow" blurX="20" blurY="20" alpha="0.45" distance="7"
									 angle="90" color="#000000" left="0" top="0" height="22" bottom="-24"/>
			
			<!--- @private -->
			<s:Rect id="border" left="0" right="0" top="0" bottom="0">
				<s:stroke>
					<!--- border stroke @private -->
					<s:SolidColorStroke id="borderStroke" weight="1"/>
				</s:stroke>
			</s:Rect>
			
			<!-- fill -->
			<!--- Defines the appearance of drop-down list's background fill. -->
			<s:Rect id="background" left="1" right="1" top="1" bottom="1" >
				<s:fill>
					<!---
					The color of the drop down's background fill.
					The default color is 0xFFFFFF.
					-->
					<s:SolidColor id="bgFill" color="0xFFFFFF" />
				</s:fill>
			</s:Rect>
			
			<!--- @private -->
			<controls:CrutchScroller id="scroller" left="0" top="0" right="0" bottom="0" hasFocusableChildren="false" minViewportInset="1">
				<!--- @copy spark.components.SkinnableDataContainer#dataGroup-->
				<s:DataGroup id="dataGroup" itemRenderer="awaybuilder.view.components.editors.renderers.MaterialItemRenderer" 
							 >
					<s:layout>
						<s:VerticalLayout gap="0" horizontalAlign="contentJustify" requestedMinRowCount="1" requestedMaxRowCount="8"/>
					</s:layout>
				</s:DataGroup>
			</controls:CrutchScroller>
			
			<s:Button id="addNewButton" left="0" right="0" bottom="-26" label="{hostComponent.newItemLabel}" height="24"
					  icon="@Embed('assets/images/add.png')" skinClass="awaybuilder.view.skins.DropdownAddButtonSkin" cornerRadius="0"  />
		</s:Group>
	</s:PopUpAnchor>
	<!---  The default skin is DropDownListButtonSkin.
	@copy spark.components.supportClasses.DropDownListBase#openButton
	@see spark.skins.spark.DropDownListButtonSkin -->
	<s:Button id="openButton" left="0" right="0" top="0" bottom="0" focusEnabled="false" tabEnabled="false"
			  skinClass="awaybuilder.view.skins.DropDownListButtonSkin"  />
	
	<!--- @copy spark.components.DropDownList#labelDisplay -->
	<s:Label id="labelDisplay" verticalAlign="middle" maxDisplayedLines="1"
			 mouseEnabled="false" mouseChildren="false"
			 left="40" right="24" top="2" bottom="2" width="75" verticalCenter="1" />
	<s:BitmapImage id="iconDisplay" width="32" height="32" left="4" top="4" bottom="4">
		<s:filters>
			<s:DropShadowFilter distance="1" blurX="1" blurY="1" angle="-135"/>
		</s:filters>
	</s:BitmapImage>
</s:SparkSkin>
